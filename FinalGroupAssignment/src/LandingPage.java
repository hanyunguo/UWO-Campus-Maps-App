import org.json.simple.parser.JSONParser;
import java.io.*;
import org.json.simple.parser.ParseException;
import org.json.simple.JSONObject;
import org.json.simple.JSONArray;
import javax.swing.*;
import java.net.*;
import java.nio.file.Files;
import java.util.*;

/**
 * <b>Landing Page </b>The Landing Page class uses the JFrame package to display the Login Page
 * <p>
 * Display the Login Page
 * </p>
 * @author Team 12
 */

public class LandingPage extends javax.swing.JFrame {
    

    User user;
    Admin admin;
    UserDatabase usrDb;
    SystemDatabase sysDb;
    String getUsername;
    String getPassword;
    JSONParser parser;
    

    /**
     * <b>Landing Page Constructor<b/>
     * Single constructor for the <i>Landing Page Class</i>
     */
    public LandingPage() {
        initComponents();
        this.parser = new JSONParser();
        getUsername = "";
        getPassword = "";
        getWeather();
        setIcons();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        weatherIcon = new javax.swing.JLabel();
        labelFeelsLike = new javax.swing.JLabel();
        labelLocationWeather = new javax.swing.JLabel();
        labelTemp = new javax.swing.JLabel();
        labelLastUpdated = new javax.swing.JLabel();
        labelSignIn = new javax.swing.JLabel();
        enterUsername1 = new javax.swing.JTextField();
        labelUsername = new javax.swing.JLabel();
        labelPassword = new javax.swing.JLabel();
        labelDevelopers = new javax.swing.JLabel();
        enterPassword = new javax.swing.JPasswordField();
        register1 = new javax.swing.JButton();
        login = new javax.swing.JButton();
        forgotPassword = new javax.swing.JButton();
        labelProjectName = new javax.swing.JLabel();
        labelGroup1 = new javax.swing.JLabel();
        Logo = new javax.swing.JLabel();
        backgroundVideo = new javax.swing.JLabel();
        backgroundImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(weatherIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 60, -1, -1));

        labelFeelsLike.setFont(new java.awt.Font("Helvetica Neue", 1, 12)); // NOI18N
        labelFeelsLike.setForeground(new java.awt.Color(255, 255, 255));
        labelFeelsLike.setText("Feels Like: Temp");
        getContentPane().add(labelFeelsLike, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 90, -1, -1));

        labelLocationWeather.setFont(new java.awt.Font("Helvetica Neue", 0, 10)); // NOI18N
        labelLocationWeather.setForeground(new java.awt.Color(255, 255, 255));
        labelLocationWeather.setText("CITY, PROVINCE");
        getContentPane().add(labelLocationWeather, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 50, -1, -1));

        labelTemp.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        labelTemp.setForeground(new java.awt.Color(255, 255, 255));
        labelTemp.setText("Temp");
        getContentPane().add(labelTemp, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 60, -1, -1));

        labelLastUpdated.setFont(new java.awt.Font("Helvetica Neue", 0, 10)); // NOI18N
        labelLastUpdated.setForeground(new java.awt.Color(255, 255, 255));
        labelLastUpdated.setText("LAST UPDATED: DDMMYYYY HHMMSS");
        getContentPane().add(labelLastUpdated, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 120, -1, -1));

        labelSignIn.setFont(new java.awt.Font("Helvetica Neue", 3, 36)); // NOI18N
        labelSignIn.setForeground(new java.awt.Color(255, 255, 255));
        labelSignIn.setText("Sign in");
        getContentPane().add(labelSignIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 250, 130, -1));

        enterUsername1.setBackground(new java.awt.Color(102, 102, 102));
        enterUsername1.setForeground(new java.awt.Color(255, 255, 255));
        enterUsername1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterUsername1ActionPerformed(evt);
            }
        });
        getContentPane().add(enterUsername1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 320, 300, -1));

        labelUsername.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        labelUsername.setForeground(new java.awt.Color(255, 255, 255));
        labelUsername.setText("Username:");
        getContentPane().add(labelUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 320, -1, -1));

        labelPassword.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        labelPassword.setForeground(new java.awt.Color(255, 255, 255));
        labelPassword.setText("Password:");
        getContentPane().add(labelPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 370, -1, -1));

        labelDevelopers.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        labelDevelopers.setForeground(new java.awt.Color(255, 255, 255));
        labelDevelopers.setText("Developed by Hanyun, William, Xiaohui, Yangxiuye, and Taysean");
        getContentPane().add(labelDevelopers, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 690, 310, 20));

        enterPassword.setBackground(new java.awt.Color(102, 102, 102));
        enterPassword.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(enterPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 370, 300, -1));

        register1.setBackground(new java.awt.Color(102, 102, 102));
        register1.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        register1.setForeground(new java.awt.Color(255, 255, 255));
        register1.setText("Sign Up");
        register1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                register1ActionPerformed(evt);
            }
        });
        getContentPane().add(register1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 420, -1, -1));

        login.setBackground(new java.awt.Color(102, 102, 102));
        login.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        login.setForeground(new java.awt.Color(255, 255, 255));
        login.setText("Login");
        login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginActionPerformed(evt);
            }
        });
        getContentPane().add(login, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 420, -1, -1));

        forgotPassword.setBackground(new java.awt.Color(153, 0, 0));
        forgotPassword.setFont(new java.awt.Font("Helvetica Neue", 3, 13)); // NOI18N
        forgotPassword.setForeground(new java.awt.Color(255, 255, 255));
        forgotPassword.setText("Forget Password");
        forgotPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forgotPasswordActionPerformed(evt);
            }
        });
        getContentPane().add(forgotPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 460, 160, -1));

        labelProjectName.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        labelProjectName.setForeground(new java.awt.Color(204, 204, 204));
        labelProjectName.setText("WESTERN GIS");
        getContentPane().add(labelProjectName, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, -1, -1));

        labelGroup1.setFont(new java.awt.Font("Arial", 2, 10)); // NOI18N
        labelGroup1.setForeground(new java.awt.Color(204, 204, 204));
        labelGroup1.setText("BY TEAM 12");
        getContentPane().add(labelGroup1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, -1, 20));
        getContentPane().add(Logo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, -20, 160, 150));
        getContentPane().add(backgroundVideo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));
        getContentPane().add(backgroundImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Private method used to retrieve weather details using the Weather API
        * @exception On input error.
     */
        private void getWeather (){
            saveWeatherApi();
            JSONParser jP = new JSONParser();
            try (FileReader reader = new FileReader ("SystemDatabase/Weather/weather.json")) {
                JSONObject jsonObject = (JSONObject) (jP.parse(reader));
                JSONArray jsonArray = (JSONArray) jsonObject.get("weather");
                JSONObject key = (JSONObject) jsonArray.get(0);
                System.out.println(key.toString());
                JSONObject mainKey = (JSONObject) key.get("main");
                JSONObject sysKey = (JSONObject) key.get("sys");

                try {
                    String location = key.get("name").toString() + ", " + sysKey.get("country").toString();
                    //String lastUpdated = currentKey.get("last_updated").toString();
                    double tempCtoK = Double.parseDouble(mainKey.get("temp").toString()) - 273.15;
                    double feelsLikeCtoK = Double.parseDouble( mainKey.get("feels_like").toString()) -273.15;
                    String tempC = (int)tempCtoK + "Â°C";
                    String feelsLikeC = (int)feelsLikeCtoK + "Â°C";

                    labelTemp.setText(tempC);
                    labelFeelsLike.setText("Feels Like: "+feelsLikeC);
                    labelLocationWeather.setText(location);
                    //labelLastUpdated.setText("Last Updated: "+lastUpdated);
                    // SHOW DISPLAYS
                    weatherIcon.show();
                    labelTemp.show();
                    labelFeelsLike.show();
                    labelLocationWeather.show();
                    //labelLastUpdated.show();
                    System.out.println("Location: " + location + "\nTemperature: "+tempC +"\nFeels Like: "+ feelsLikeC);
                } 
                catch (Exception e){
                    e.printStackTrace();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        
        /**
         * Private method to save data from Weather API.
         * @exception On input error.
         */
        private void saveWeatherApi () {

            // HIDE THESE INITIAL displays
            weatherIcon.hide();
            labelTemp.hide();
            labelFeelsLike.hide();
            labelLocationWeather.hide();
            labelLastUpdated.hide();
            String urlString = "https://api.openweathermap.org/data/2.5/weather?lat=42.9832406&lon=-81.243372&appid=7927fc851de0c8830d63657bb365f75e";
            try {
                // SAVE WEATHER INFORMATION
                StringBuilder result = new StringBuilder();
                URL url = new URL(urlString);
                URLConnection conn = url.openConnection();
                try {
                    BufferedReader rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));

                    String line;
                    JSONArray jArray = new JSONArray(); 
                    JSONObject jObj = new JSONObject();
                    while ((line = rd.readLine()) != null){
                        result.append(line);
                        jArray.add(result);
                        //System.out.println("Writing: " + line);
                    }
                    rd.close();
                    jObj.put("weather", jArray);
                    FileWriter writer = new FileWriter("SystemDatabase/Weather/weather.json");
                    writer.write(jObj.toString());
                    writer.close();
                    System.out.println(jObj.toString());
                }
                catch (UnknownHostException e) {
                    JOptionPane.showMessageDialog(this, "Internet connection is needed to display the current weather!\nThe last retrieved weather update will be displayed.");
                }
            }
            catch (Exception e) {
                e.printStackTrace();
            }
        }
    
        /**
         * Private method stores username as input
         * @param evt 
         */
    private void enterUsername1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterUsername1ActionPerformed
        // TODO add your handling code here:
        this.getUsername = enterUsername1.getText();
    }//GEN-LAST:event_enterUsername1ActionPerformed
    
    /**
     * Private method registers the action performed when password is entered by user
     * @param evt 
     */
    private void register1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_register1ActionPerformed
        // TODO add your handling code here:
        usrDb = new UserDatabase();
        getPassword = new String(enterPassword.getPassword());
        if (getUsername.equals("") || getPassword.equals("")) {
            JOptionPane.showMessageDialog(this, "Did you remember to press \"enter\" (Windows) or \"return\" (Mac)\nafter entering both your username or password.\nEither one or both fields have a null/blank value.");
            this.dispose();
            LandingPage refresh = new LandingPage();
            refresh.setVisible(true);
        }
        usrDb.userRegister(getUsername, getPassword);

        // refresh page
        this.dispose();
        LandingPage refresh = new LandingPage();
        refresh.setVisible(true);
        
        JOptionPane.showMessageDialog(this, "User registered.");
    }//GEN-LAST:event_register1ActionPerformed
    
    /**
     * Private method performs login action when username and password is entered by user
     * @param evt 
     */
    private void loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginActionPerformed
        // TODO add your handling code here:
        getPassword = new String(enterPassword.getPassword());
        boolean changePage = false;
        boolean adminLogin = false;
        usrDb = new UserDatabase();
        if (getUsername.equals("") || getPassword.equals("")) {
            JOptionPane.showMessageDialog(this, "Did you remember to press \"enter\" (Windows) or \"return\" (Mac)\nafter entering both your username or password.\nEither one or both fields have a null/blank value.");
            this.dispose();
            LandingPage refresh = new LandingPage();
            refresh.setVisible(true);
        }
        // Attempt to login user
        usrDb.userLogin(getUsername, getPassword);
        if (usrDb.activeUser == null) { // if unsuccessful, attempt to login as admin
            usrDb.adminLogin(getUsername, getPassword);
            adminLogin = true;
            System.out.println("You've signed in as an admin");
        } else { changePage = true; } // if success then we will be switching pages to choose building, if both are unsuccessfuly then output message
        if (usrDb.activeUser == null && usrDb.activeAdmin == null) {
            System.out.println("Login Failed");
        } else { changePage = true; }
        
        if (changePage) {
            JOptionPane.showMessageDialog(this, "Login Successful");
            if (!adminLogin) {
                this.dispose();
                SelectBuilding sb = new SelectBuilding(usrDb.activeUser);
                System.out.println("Logging in as user: " + usrDb.activeUser.viewUserName());
                sb.setVisible(true);
            }
            else {
                this.dispose();
                SelectBuilding sb = new SelectBuilding(usrDb.activeAdmin);
                System.out.println("Logging in as admin: " + usrDb.activeAdmin.viewadminName());
                sb.setVisible(true);
            }
        }
        else {
            // refresh page
            JOptionPane.showMessageDialog(this, "Username or password invalid.");
            this.dispose();
            LandingPage refresh = new LandingPage();
            refresh.setVisible(true);
        }
    }//GEN-LAST:event_loginActionPerformed

    /**
     * Private method triggers forgot password page and asks user for new password
     * @param evt 
     */
    private void forgotPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forgotPasswordActionPerformed
        // TODO add your handling code here:
        this.dispose();
        if (this.user != null) {
            ForgotPassword newPasswordPage = new ForgotPassword();
            newPasswordPage.setVisible(true);
        }
        else {
            ForgotPassword newPasswordPage = new ForgotPassword();
            newPasswordPage.setVisible(true);
        }

    }//GEN-LAST:event_forgotPasswordActionPerformed

    /**
     * Private method sets icons which includes Background video and logos.
     */
    private void setIcons(){
        backgroundVideo.setIcon(new ImageIcon("Images/Icons/UWO_DRONE_2.gif"));
        Logo.setIcon(new ImageIcon("Images/Icons/UWO_LOGO_TINY.png"));
        weatherIcon.setIcon(new ImageIcon("Images/Icons/clouds_tiny.png"));
        
        
    }
    
    /**
     * Main method to display form
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LandingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LandingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LandingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LandingPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LandingPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Logo;
    private javax.swing.JLabel backgroundImage;
    private javax.swing.JLabel backgroundVideo;
    private javax.swing.JPasswordField enterPassword;
    private javax.swing.JTextField enterUsername1;
    private javax.swing.JButton forgotPassword;
    private javax.swing.JLabel labelDevelopers;
    private javax.swing.JLabel labelFeelsLike;
    private javax.swing.JLabel labelGroup1;
    private javax.swing.JLabel labelLastUpdated;
    private javax.swing.JLabel labelLocationWeather;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JLabel labelProjectName;
    private javax.swing.JLabel labelSignIn;
    private javax.swing.JLabel labelTemp;
    private javax.swing.JLabel labelUsername;
    private javax.swing.JButton login;
    private javax.swing.JButton register1;
    private javax.swing.JLabel weatherIcon;
    // End of variables declaration//GEN-END:variables
}
