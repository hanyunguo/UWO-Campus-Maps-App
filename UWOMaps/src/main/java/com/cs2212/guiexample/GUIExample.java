package com.cs2212.guiexample;

import java.awt.Color;
import java.awt.Point;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import java.net.HttpURLConnection;


public class GUIExample extends javax.swing.JFrame {

    private BufferedImage mapImage;
    
    //Hardcoded POI locations, you will need to read them from a file (or DB) and
    //have more meta data for each point. They should also be different for each map
    //and have a layer associated with them.
    private int[][] poiLocations = {{250,250}, {100,500}, {250, 405}, {75,345},{605,230}};
    
    //Hardcoded layer names, yours can be hardcoded too, but the names need to be descriptive.
    //You should have more than one POI per layer.
    private String[] poiNames = { "Layer 1", "Layer 2", "Layer 3", "Layer 4", "Layer 5"};
    private String[] layerNames = { "Layer 1", "Layer 2", "Layer 3", "Layer 4", "Layer 5"};
    
    //Names of the maps, rather then simply listing all maps in one big list you may want
    //to break it down by building to make it easier to find the map you want.
    //Yours can be hardcoded or read from a file.
    private String[] floorNames = { "MC Floor 0", "MC Floor 1", "MC Floor 2", "MC Floor 3", "MC Floor 4" };
    private String[] mapNames = { "MC Floor 0", "MC Floor 1", "MC Floor 2", "MC Floor 3", "MC Floor 4" };
    
    //Location of map files. In this example we are using png files, pdfs are more 
    //flexible but harder to work with in java (would need an outside library).
    //You can hardcode your filenames if you wish.
    //Note that these have to be in the same order as the mapNames to match up. (will change later)
    //Important! These file paths must be on your class path.
    private String[] mapFiles = { "maps/mc0.png", "maps/mc1.png", "maps/mc2.png", "maps/mc3.png", "maps/mc4.png"};
    
    //JLabel we are using for the poi marker. As you will have many more POIs per
    //layer you are going to have to make a JLabel for each POI if you use this
    //method.
    private JLabel poi = new JLabel();
    List<String> iList = new ArrayList<String>();
    private int count = 0;
    private boolean editor_mode = false;
    private boolean toggle_map_move = false;
    
    
    
    /**
     * Creates new form NewJFrame
     */
    public GUIExample() {
        //initialize components (this method was generated by NetBeans)
        initComponents();
        
        //all code in this method past this point is custom code (not generated)
        
        //Adds the map names and layer names to the ComboBox components
        BuildingComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(mapNames));
        FloorComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(layerNames));
        poiLayerList.setListData(layerNames);
        
        //Try to load the poi.png image used for the points of interset
        try {
           //if you get an error here, it is likely due to poi.png not being on the class path
           //or not in the correct directory
           poi.setIcon(new ImageIcon(ImageIO.read(GUIExample.class.getClassLoader().getResource("poi.png"))));
        } catch (IOException ex) {
            // handle exception...
            // you will have to come up with a better way to deal with errors
            System.out.println("Error reading poi.png");
            System.out.println(ex.getMessage());
            System.out.println("Your class path is: " + System.getProperty("java.class.path"));
        }
        
        //set the location of the poi label
        //arguments are x, y, width, height (width and height should match the size
        //of the image).
        poi.setBounds(0,0,75,75);
        
        //A Layered pane allows components to overlap, the number here sets their
        //depth (higher components, with a larger number, are on top).
        layeredMapPane.add(poi, 10);   //poi marker
        layeredMapPane.setLayer(map, 0); //will be the map once loaded
        
        //Keep the poi label hidden until shown
        poi.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     * 
     * All code in initCompoents was generated by NetBeans. If you are using
     * the NetBeans GUI editor don't change this manually.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        choice1 = new java.awt.Choice();
        label1 = new java.awt.Label();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        popupMenu = new javax.swing.JPopupMenu();
        popPanel = new javax.swing.JPanel();
        mapScrollPane = new javax.swing.JScrollPane();
        layeredMapPane = new javax.swing.JLayeredPane();
        map = new javax.swing.JLabel();
        controlPanel = new javax.swing.JPanel();
        searchTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        mapControlLabel = new javax.swing.JLabel();
        poiLayerControlLabel = new javax.swing.JLabel();
        poiLayerScrollPane = new javax.swing.JScrollPane();
        poiLayerList = new javax.swing.JList<>();
        XYText = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        ToggleButton = new javax.swing.JButton();
        ToggleButton1 = new javax.swing.JButton();
        mapShowButton = new javax.swing.JButton();
        mapControlLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        BuildingComboBox = new javax.swing.JComboBox<>();
        FloorComboBox = new javax.swing.JComboBox<>();
        poiLayerScrollPane1 = new javax.swing.JScrollPane();
        poiLayerList1 = new javax.swing.JList<>();
        poiLayerControlLabel1 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        accountMenu = new javax.swing.JMenu();
        exitFileMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        helpMenu = new javax.swing.JMenu();
        aboutHelpMenuItem = new javax.swing.JMenuItem();

        jFrame1.setMinimumSize(new java.awt.Dimension(300, 300));

        label1.setText("Type of POI");

        jButton2.setText("Submit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("jLabel2");

        jLabel3.setText("ENTER NAME OF CLASS:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTextField1.setText("jTextField1");

        jRadioButton1.setText("Add to Favourites");

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(jButton2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jFrame1Layout.createSequentialGroup()
                                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(choice1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jFrame1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(choice1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(18, 18, 18))
        );

        popupMenu.setMaximumSize(new java.awt.Dimension(200, 200));
        popupMenu.setMinimumSize(new java.awt.Dimension(200, 200));
        popupMenu.setSize(new java.awt.Dimension(1500, 1500));

        javax.swing.GroupLayout popPanelLayout = new javax.swing.GroupLayout(popPanel);
        popPanel.setLayout(popPanelLayout);
        popPanelLayout.setHorizontalGroup(
            popPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        popPanelLayout.setVerticalGroup(
            popPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mapScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        mapScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        map.setText("No Map Loaded Yet!");
        map.setToolTipText("");
        map.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mapMouseClicked(evt);
            }
        });

        layeredMapPane.setLayer(map, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layeredMapPaneLayout = new javax.swing.GroupLayout(layeredMapPane);
        layeredMapPane.setLayout(layeredMapPaneLayout);
        layeredMapPaneLayout.setHorizontalGroup(
            layeredMapPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layeredMapPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(map)
                .addContainerGap(813, Short.MAX_VALUE))
        );
        layeredMapPaneLayout.setVerticalGroup(
            layeredMapPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layeredMapPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(map)
                .addContainerGap(875, Short.MAX_VALUE))
        );

        mapScrollPane.setViewportView(layeredMapPane);

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        mapControlLabel.setText("Building");

        poiLayerControlLabel.setText("POI Type");

        poiLayerList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                poiLayerListValueChanged(evt);
            }
        });
        poiLayerScrollPane.setViewportView(poiLayerList);

        XYText.setText("(x,y)");
        XYText.setToolTipText("");

        jLabel1.setText("Editor Mode");

        ToggleButton.setText("Enable");
        ToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ToggleButtonActionPerformed(evt);
            }
        });

        ToggleButton1.setText("Toggle Map Move");
        ToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ToggleButton1ActionPerformed(evt);
            }
        });

        mapShowButton.setText("Show");
        mapShowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mapShowButtonActionPerformed(evt);
            }
        });

        mapControlLabel1.setText("Floor");

        BuildingComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        BuildingComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuildingComboBoxActionPerformed(evt);
            }
        });

        FloorComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        poiLayerScrollPane1.setViewportView(poiLayerList1);

        poiLayerControlLabel1.setText("POI Select");

        javax.swing.GroupLayout controlPanelLayout = new javax.swing.GroupLayout(controlPanel);
        controlPanel.setLayout(controlPanelLayout);
        controlPanelLayout.setHorizontalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(ToggleButton))
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(ToggleButton1))
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(164, Short.MAX_VALUE))
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mapControlLabel1)
                            .addComponent(mapControlLabel))
                        .addGap(52, 52, 52)
                        .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FloorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BuildingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))
            .addGroup(controlPanelLayout.createSequentialGroup()
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(XYText)
                            .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButton))
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(poiLayerControlLabel))
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(poiLayerScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(poiLayerControlLabel1)
                            .addComponent(poiLayerScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(controlPanelLayout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(mapShowButton)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        controlPanelLayout.setVerticalGroup(
            controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, controlPanelLayout.createSequentialGroup()
                .addComponent(XYText)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mapControlLabel)
                    .addComponent(BuildingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(controlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FloorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mapControlLabel1))
                .addGap(16, 16, 16)
                .addComponent(mapShowButton)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(poiLayerControlLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(poiLayerScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(poiLayerControlLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(poiLayerScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(7, 7, 7)
                .addComponent(ToggleButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ToggleButton1)
                .addContainerGap())
        );

        XYText.getAccessibleContext().setAccessibleName("");

        accountMenu.setText("Account");

        exitFileMenuItem.setText("Exit");
        exitFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitFileMenuItemActionPerformed(evt);
            }
        });
        accountMenu.add(exitFileMenuItem);

        menuBar.add(accountMenu);

        editMenu.setText("Edit");
        menuBar.add(editMenu);

        helpMenu.setText("Help");
        helpMenu.setToolTipText("");

        aboutHelpMenuItem.setText("About");
        aboutHelpMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutHelpMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutHelpMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(controlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mapScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 854, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mapScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(controlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //This method is run when the exit menu item (from the file menu) is selected
    private void exitFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitFileMenuItemActionPerformed
        //Ask the user if they are sure they want to exit
        int i = JOptionPane.showConfirmDialog(this, "Are you sure you want to exit?", "Exit?", JOptionPane.YES_NO_OPTION);
        if(i == 0) System.exit(0);
    }//GEN-LAST:event_exitFileMenuItemActionPerformed

    //This method is run when the about menu item (from the help menu) is selected
    private void aboutHelpMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutHelpMenuItemActionPerformed
        //Show a simple popup
        JOptionPane.showMessageDialog(this, "This is just a simple GUI demo.\nMost features are missing.\nThe GUI was created with NetBean's GUI editor!", "About", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_aboutHelpMenuItemActionPerformed

    private void mapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mapMouseClicked
        // TODO add your handling code here:
        if(editor_mode){
            Point point = evt.getPoint();
            int x = evt.getX();
            int y = evt.getY();
            
            if(toggle_map_move){
            int view_x = mapScrollPane.getViewport().getWidth();
            int view_y = mapScrollPane.getViewport().getHeight();
            
            mapScrollPane.getViewport().setViewPosition(new Point(x-(view_x/2),y-(view_y/2)));
            }
            
            
            iList.add(String.format("{%s,%s}",x,y));
            String output = iList.toString();
            String textF = String.format("%s, %s",x,y);
            XYText.setText(textF);

            jFrame1.setEnabled(true);
            //jFrame1.setLocation(map.getLocationOnScreen());
            jFrame1.setLocation(mapScrollPane.getLocationOnScreen());
            //jFrame1.setLocation(x-15, y+20);
            jFrame1.show();

            poi.setBounds(x,y,75,75);
            poi.setLocation(x-35, y-60);
            poi.setVisible(true);
        }
        
    }//GEN-LAST:event_mapMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jFrame1.setEnabled(false);
        jFrame1.show(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    //This method is called when the Show button is clicked
    private void mapShowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mapShowButtonActionPerformed
        URL mapFile;
        int index = BuildingComboBox.getSelectedIndex(); //find out what item in the map list is selected

        if(index < mapFiles.length) {
            //This trys to find the location of the map file.
            //if mapFile is null, it could not find the file (not on class path?)
            mapFile =  GUIExample.class.getClassLoader().getResource(mapFiles[index]);

            //try to load the map image and set it on the map icon
            try {
                mapImage = ImageIO.read(mapFile);
                map.setIcon(new ImageIcon(mapImage));
                map.setText("");
                //map.setLocation(250, 250);
            } catch (IOException ex) {
                // handle exception...
                // come up with a better way to deal with errors
                System.out.println("Error reading " + mapFiles[index]);
                System.out.println(ex.getMessage());
                System.out.println("Your class path is: " + System.getProperty("java.class.path"));
                if(mapFile != null)
                System.out.println("URL: " + mapFile.toString());
            }

            //You will have to decided what happens when a map is changed and
            //there are still POIs showing. You don't want to show them on
            //the wrong map. Here we just hide them and unselect all layers.
            //This might not be the best option (e.g. users may want to keep
                //the layers selected between maps).
            poi.setVisible(false);
            poiLayerList.clearSelection();
        }
    }//GEN-LAST:event_mapShowButtonActionPerformed

    private void ToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ToggleButton1ActionPerformed
        // TODO add your handling code here:
        if(toggle_map_move){
            ToggleButton1.setText("Toggle Map Move");
            ToggleButton1.setBackground(Color.white);
            toggle_map_move = false;
        } else {
            ToggleButton1.setText("Toggle Map Move");
            ToggleButton1.setBackground(Color.gray);
            toggle_map_move = true;
        }
    }//GEN-LAST:event_ToggleButton1ActionPerformed

    private void ToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ToggleButtonActionPerformed
        // TODO add your handling code here:
        if(editor_mode){
            ToggleButton.setText("Enable");
            ToggleButton.setBackground(Color.white);
            editor_mode = false;
        } else {
            ToggleButton.setText("Disable");
            ToggleButton.setBackground(Color.gray);
            editor_mode = true;
        }
    }//GEN-LAST:event_ToggleButtonActionPerformed

    //This method is run when any change is made to the POI layer list in the GUI
    private void poiLayerListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_poiLayerListValueChanged
        int index = poiLayerList.getSelectedIndex(); //find out what item was selected

        if(map.getIcon() != null && index >= 0) { //only show the POI if a map is being displayed and a POI layer was selected
            //make the poi label visible
            poi.setVisible(true);
            //update the location of the poi label
            poi.setBounds(poiLocations[index][0],poiLocations[index][1],75,75);
        } else {
            //Clear the selection in the POI layer list in the GUI
            poiLayerList.clearSelection();
            //Hide the poi label
            poi.setVisible(false);
        }
    }//GEN-LAST:event_poiLayerListValueChanged

    //This method is run when the search button is pressed
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        //Search is not implmented yet so just show a pop up.
        JOptionPane.showMessageDialog(this, "The search is not implmented yet but you input: " + searchTextField.getText(), "Search", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_searchButtonActionPerformed

    private void BuildingComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuildingComboBoxActionPerformed
        // TODO add your handling code here:
        mapShowButtonActionPerformed(evt);
    }//GEN-LAST:event_BuildingComboBoxActionPerformed

    //The java main method (where the code starts)
    //All of this method was generated by NetBeans
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIExample.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIExample.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIExample.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIExample.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIExample().setVisible(true);
            }
        });
    }

    //These variables were generated by NetBeans
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> BuildingComboBox;
    private javax.swing.JComboBox<String> FloorComboBox;
    private javax.swing.JButton ToggleButton;
    private javax.swing.JButton ToggleButton1;
    private javax.swing.JLabel XYText;
    private javax.swing.JMenuItem aboutHelpMenuItem;
    private javax.swing.JMenu accountMenu;
    private java.awt.Choice choice1;
    private javax.swing.JPanel controlPanel;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitFileMenuItem;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private java.awt.Label label1;
    private javax.swing.JLayeredPane layeredMapPane;
    private javax.swing.JLabel map;
    private javax.swing.JLabel mapControlLabel;
    private javax.swing.JLabel mapControlLabel1;
    private javax.swing.JScrollPane mapScrollPane;
    private javax.swing.JButton mapShowButton;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JLabel poiLayerControlLabel;
    private javax.swing.JLabel poiLayerControlLabel1;
    private javax.swing.JList<String> poiLayerList;
    private javax.swing.JList<String> poiLayerList1;
    private javax.swing.JScrollPane poiLayerScrollPane;
    private javax.swing.JScrollPane poiLayerScrollPane1;
    private javax.swing.JPanel popPanel;
    private javax.swing.JPopupMenu popupMenu;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchTextField;
    // End of variables declaration//GEN-END:variables
}
